/***************************************************************************
 *   Copyright (C) 2009 by Paolo D'Apice                                   *
 *   dapicester@gmail.com                                                  *
 ***************************************************************************/
#ifndef RANGE_H
#define RANGE_H

#include <itpp/base/vec.h>
using itpp::mat;
#include <itpp/base/mat.h>
using itpp::vec;
#include <itpp/base/operators.h>

namespace model {

/// Linearly scale data to be whithin a given range.
inline mat* scaleData(const mat& input, const mat& range) {
    int R = input.rows();
    int C = input.cols();
    
    mat* scaled = new mat(R,C);
    scaled->zeros();
    
    // scale data to be within [mi,Mi]
    for(int i=0; i<C; i++) {
        vec col = input.get_col(i);
        
        double mi = range(0,i);
        double Mi = range(1,i);
        if( (Mi - mi) != 0.0) {
            vec value = 2 * (col - mi ) / (Mi - mi) - 1; 
            scaled->set_col(i, value);
        }
    }
    return scaled;
}

const mat range = 
" 677.1070780399273871807963587343692779541015625 "
" 171.124029237493601840469636954367160797119140625 "
"2600.723774908210543799214065074920654296875 "
"  59.69150951247078040751148364506661891937255859375 "
"  21.059999999999998721023075631819665431976318359375 "
"   0.267689280960842435064250821596942842006683349609375 "
"  -7.74125676741966106675363334943540394306182861328125 "
"  -8.6084652225091371491316749597899615764617919921875 "
"  -5.40178042983103523511090315878391265869140625 "
"  -3.437045997456957824311984950327314436435699462890625 "
"  -2.05819146326689317305635995580814778804779052734375 "
"  -2.2630848108924652706264168955385684967041015625 "
";"
"14839.193561114176191040314733982086181640625 "
"  615.9148618438683797648991458117961883544921875 "
"21444.23623916276847012341022491455078125 "
"  302.631344025779753792448900640010833740234375 "
"  458.13043478260868823781493119895458221435546875 "
"    0.9619978068740582255458093641209416091442108154296875 "
"    6.52677504115817708196800595032982528209686279296875 "
"    1.7837935490615108857781478945980779826641082763671875 "
"    3.216453257954920541550336565705947577953338623046875 "
"    3.56360255575086437573872899520210921764373779296875 "
"    2.75483162225700795033844769932329654693603515625 "
"    2.1050579205616930522637630929239094257354736328125 ";

}

#endif
